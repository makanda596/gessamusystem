{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\SYSTEMS\\\\GIS\\\\client\\\\src\\\\pages\\\\Resetpassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    token\n  } = useParams(); // Get token from URL params\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      setIsLoading(true);\n      setError(\"\");\n      const response = await axios.post(`${import.meta.env.BACKEND_URL}/auth/reset-password/${token}`, {\n        password\n      });\n      setMessage(response.data.message);\n      setTimeout(() => navigate(\"/\"), 2000); // Redirect to login after 3 seconds\n    } catch (err) {\n      setError(err.response && err.response.data && err.response.data.message ? err.response.data.message : \"An error occurred. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(prev => !prev);\n  };\n  const isButtonDisabled = isLoading || password !== confirmPassword || password.length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-white p-6 rounded shadow-md w-80\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? \"text\" : \"password\",\n          placeholder: \"New Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: togglePasswordVisibility,\n          className: \"absolute right-2 top-2 text-gray-500 hover:text-gray-700\",\n          children: showPassword ? \"Hide\" : \"Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? \"text\" : \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          className: \"w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: `w-full p-2 text-white rounded ${isButtonDisabled ? \"bg-blue-300\" : \"bg-blue-500 hover:bg-blue-600\"}`,\n        disabled: isButtonDisabled,\n        children: isLoading ? \"Resetting...\" : \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-sm mt-4\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-sm mt-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"I7tyjZgvysdC44OXwXQeMqwS1no=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","axios","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","message","setMessage","error","setError","isLoading","setIsLoading","token","navigate","handleSubmit","e","preventDefault","response","post","import","meta","env","BACKEND_URL","data","setTimeout","err","togglePasswordVisibility","prev","isButtonDisabled","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/SYSTEMS/GIS/client/src/pages/Resetpassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst ResetPassword = () => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { token } = useParams(); // Get token from URL params\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            setError(\"Passwords do not match.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setIsLoading(true); \r\n            setError(\"\");\r\n            const response = await axios.post(\r\n                `${import.meta.env.BACKEND_URL}/auth/reset-password/${token}`,\r\n                { password }\r\n            );\r\n            setMessage(response.data.message);\r\n            setTimeout(() => navigate(\"/\"), 2000); // Redirect to login after 3 seconds\r\n        } catch (err) {\r\n            setError(\r\n                err.response && err.response.data && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : \"An error occurred. Please try again.\"\r\n            );\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword((prev) => !prev);\r\n    };\r\n\r\n    const isButtonDisabled = isLoading || password !== confirmPassword || password.length === 0;\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n            <h2 className=\"text-2xl font-bold mb-6\">Reset Password</h2>\r\n            <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded shadow-md w-80\">\r\n                <div className=\"relative w-full mb-4\">\r\n                    <input\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"New Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        className=\"w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                        required\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={togglePasswordVisibility}\r\n                        className=\"absolute right-2 top-2 text-gray-500 hover:text-gray-700\"\r\n                    >\r\n                        {showPassword ? \"Hide\" : \"Show\"}\r\n                    </button>\r\n                </div>\r\n                <div className=\"relative w-full mb-4\">\r\n                    <input\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"Confirm Password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        className=\"w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className={`w-full p-2 text-white rounded ${isButtonDisabled ? \"bg-blue-300\" : \"bg-blue-500 hover:bg-blue-600\"}`}\r\n                    disabled={isButtonDisabled}\r\n                >\r\n                    {isLoading ? \"Resetting...\" : \"Reset Password\"}\r\n                </button>\r\n                {message && <p className=\"text-green-500 text-sm mt-4\">{message}</p>}\r\n                {error && <p className=\"text-red-500 text-sm mt-4\">{error}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}