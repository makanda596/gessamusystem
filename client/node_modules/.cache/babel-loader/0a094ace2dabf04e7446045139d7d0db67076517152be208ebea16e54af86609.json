{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\GIS\\\\client\\\\src\\\\pages\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [statusFilter, setStatusFilter] = useState('All');\n  const [sortOrder, setSortOrder] = useState('dueDate'); // Sorting by dueDate, title, or completed\n  const [currentPage, setCurrentPage] = useState(1);\n  const tasksPerPage = 5;\n  const [dateRange, setDateRange] = useState({\n    start: '',\n    end: ''\n  });\n  useEffect(() => {\n    setLoading(true);\n    setError('');\n    // Simulating API call to fetch tasks\n    setTimeout(() => {\n      const fetchedTasks = [{\n        id: 1,\n        title: 'Task 1',\n        description: 'Description for task 1',\n        dueDate: '2025-01-30',\n        completed: false\n      }, {\n        id: 2,\n        title: 'Task 2',\n        description: 'Description for task 2',\n        dueDate: '2025-02-10',\n        completed: true\n      }, {\n        id: 3,\n        title: 'Task 3',\n        description: 'Description for task 3',\n        dueDate: '2025-03-15',\n        completed: false\n      }, {\n        id: 4,\n        title: 'Task 4',\n        description: 'Description for task 4',\n        dueDate: '2025-01-25',\n        completed: true\n      }, {\n        id: 5,\n        title: 'Task 5',\n        description: 'Description for task 5',\n        dueDate: '2025-04-18',\n        completed: false\n      }, {\n        id: 6,\n        title: 'Task 6',\n        description: 'Description for task 6',\n        dueDate: '2025-02-28',\n        completed: true\n      }, {\n        id: 7,\n        title: 'Task 7',\n        description: 'Description for task 7',\n        dueDate: '2025-03-01',\n        completed: false\n      }];\n      setTasks(fetchedTasks);\n      setLoading(false);\n    }, 1000);\n  }, []);\n  useEffect(() => {\n    setFilteredTasks(tasks);\n  }, [tasks]);\n  useEffect(() => {\n    let filtered = tasks;\n\n    // Filter by search term\n    if (searchTerm) {\n      filtered = filtered.filter(task => task.title.toLowerCase().includes(searchTerm.toLowerCase()) || task.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    // Filter by status\n    if (statusFilter !== 'All') {\n      const isCompleted = statusFilter === 'Completed';\n      filtered = filtered.filter(task => task.completed === isCompleted);\n    }\n\n    // Filter by date range\n    if (dateRange.start && dateRange.end) {\n      filtered = filtered.filter(task => new Date(task.dueDate) >= new Date(dateRange.start) && new Date(task.dueDate) <= new Date(dateRange.end));\n    }\n\n    // Sort tasks based on selected order\n    if (sortOrder === 'dueDate') {\n      filtered = filtered.sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\n    } else if (sortOrder === 'title') {\n      filtered = filtered.sort((a, b) => a.title.localeCompare(b.title));\n    } else if (sortOrder === 'completed') {\n      filtered = filtered.sort((a, b) => a.completed - b.completed);\n    }\n    setFilteredTasks(filtered);\n  }, [searchTerm, statusFilter, dateRange, sortOrder, tasks]);\n  const handleAddTask = () => {\n    if (!newTask.title || !newTask.description || !newTask.dueDate) {\n      setError('Please fill in all the fields.');\n      return;\n    }\n    const newTaskObj = {\n      ...newTask,\n      id: tasks.length + 1,\n      completed: false\n    };\n    setTasks([...tasks, newTaskObj]);\n    setNewTask({\n      title: '',\n      description: '',\n      dueDate: ''\n    });\n  };\n  const handleDeleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const handleToggleComplete = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const indexOfLastTask = currentPage * tasksPerPage;\n  const indexOfFirstTask = indexOfLastTask - tasksPerPage;\n  const currentTasks = filteredTasks.slice(indexOfFirstTask, indexOfLastTask);\n  const totalPages = Math.ceil(filteredTasks.length / tasksPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-page max-w-4xl mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold mb-6\",\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters mb-6 flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"p-2 border border-gray-300 rounded\",\n        placeholder: \"Search tasks...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border border-gray-300 rounded\",\n        value: statusFilter,\n        onChange: e => setStatusFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"p-2 border border-gray-300 rounded\",\n        value: dateRange.start,\n        onChange: e => setDateRange({\n          ...dateRange,\n          start: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"p-2 border border-gray-300 rounded\",\n        value: dateRange.end,\n        onChange: e => setDateRange({\n          ...dateRange,\n          end: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border border-gray-300 rounded\",\n        value: sortOrder,\n        onChange: e => setSortOrder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dueDate\",\n          children: \"Due Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completion Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"p-2 border border-gray-300 rounded mb-2 w-full\",\n        placeholder: \"Task title\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"p-2 border border-gray-300 rounded mb-2 w-full\",\n        placeholder: \"Task description\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"p-2 border border-gray-300 rounded mb-2 w-full\",\n        value: newTask.dueDate,\n        onChange: e => setNewTask({\n          ...newTask,\n          dueDate: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white p-2 rounded-md\",\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: currentTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-item mb-4 p-4 border border-gray-200 rounded-md shadow-md hover:shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: [\"Due: \", task.dueDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions mt-2 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToggleComplete(task.id),\n              className: `px-4 py-2 rounded-md ${task.completed ? 'bg-green-500' : 'bg-red-500'} text-white`,\n              children: task.completed ? 'Mark as Pending' : 'Mark as Completed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTask(task.id),\n              className: \"bg-gray-500 text-white px-4 py-2 rounded-md\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination mt-6 flex justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        className: \"bg-gray-300 text-gray-700 p-2 rounded-md mx-2\",\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-700\",\n        children: [currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === totalPages,\n        className: \"bg-gray-300 text-gray-700 p-2 rounded-md mx-2\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskPage, \"cKQNeRKeLZFt3M7iRS1aA/s9h1E=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskPage","_s","tasks","setTasks","newTask","setNewTask","title","description","dueDate","loading","setLoading","error","setError","searchTerm","setSearchTerm","filteredTasks","setFilteredTasks","statusFilter","setStatusFilter","sortOrder","setSortOrder","currentPage","setCurrentPage","tasksPerPage","dateRange","setDateRange","start","end","setTimeout","fetchedTasks","id","completed","filtered","filter","task","toLowerCase","includes","isCompleted","Date","sort","a","b","localeCompare","handleAddTask","newTaskObj","length","handleDeleteTask","handleToggleComplete","map","handlePageChange","pageNumber","indexOfLastTask","indexOfFirstTask","currentTasks","slice","totalPages","Math","ceil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/GIS/client/src/pages/Tasks.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TaskPage = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [newTask, setNewTask] = useState({ title: '', description: '', dueDate: '' });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [filteredTasks, setFilteredTasks] = useState([]);\r\n    const [statusFilter, setStatusFilter] = useState('All');\r\n    const [sortOrder, setSortOrder] = useState('dueDate'); // Sorting by dueDate, title, or completed\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const tasksPerPage = 5;\r\n    const [dateRange, setDateRange] = useState({ start: '', end: '' });\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setError('');\r\n        // Simulating API call to fetch tasks\r\n        setTimeout(() => {\r\n            const fetchedTasks = [\r\n                { id: 1, title: 'Task 1', description: 'Description for task 1', dueDate: '2025-01-30', completed: false },\r\n                { id: 2, title: 'Task 2', description: 'Description for task 2', dueDate: '2025-02-10', completed: true },\r\n                { id: 3, title: 'Task 3', description: 'Description for task 3', dueDate: '2025-03-15', completed: false },\r\n                { id: 4, title: 'Task 4', description: 'Description for task 4', dueDate: '2025-01-25', completed: true },\r\n                { id: 5, title: 'Task 5', description: 'Description for task 5', dueDate: '2025-04-18', completed: false },\r\n                { id: 6, title: 'Task 6', description: 'Description for task 6', dueDate: '2025-02-28', completed: true },\r\n                { id: 7, title: 'Task 7', description: 'Description for task 7', dueDate: '2025-03-01', completed: false },\r\n            ];\r\n            setTasks(fetchedTasks);\r\n            setLoading(false);\r\n        }, 1000);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFilteredTasks(tasks);\r\n    }, [tasks]);\r\n\r\n    useEffect(() => {\r\n        let filtered = tasks;\r\n\r\n        // Filter by search term\r\n        if (searchTerm) {\r\n            filtered = filtered.filter(task =>\r\n                task.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                task.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n            );\r\n        }\r\n\r\n        // Filter by status\r\n        if (statusFilter !== 'All') {\r\n            const isCompleted = statusFilter === 'Completed';\r\n            filtered = filtered.filter(task => task.completed === isCompleted);\r\n        }\r\n\r\n        // Filter by date range\r\n        if (dateRange.start && dateRange.end) {\r\n            filtered = filtered.filter(task =>\r\n                new Date(task.dueDate) >= new Date(dateRange.start) &&\r\n                new Date(task.dueDate) <= new Date(dateRange.end)\r\n            );\r\n        }\r\n\r\n        // Sort tasks based on selected order\r\n        if (sortOrder === 'dueDate') {\r\n            filtered = filtered.sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\r\n        } else if (sortOrder === 'title') {\r\n            filtered = filtered.sort((a, b) => a.title.localeCompare(b.title));\r\n        } else if (sortOrder === 'completed') {\r\n            filtered = filtered.sort((a, b) => a.completed - b.completed);\r\n        }\r\n\r\n        setFilteredTasks(filtered);\r\n    }, [searchTerm, statusFilter, dateRange, sortOrder, tasks]);\r\n\r\n    const handleAddTask = () => {\r\n        if (!newTask.title || !newTask.description || !newTask.dueDate) {\r\n            setError('Please fill in all the fields.');\r\n            return;\r\n        }\r\n        const newTaskObj = { ...newTask, id: tasks.length + 1, completed: false };\r\n        setTasks([...tasks, newTaskObj]);\r\n        setNewTask({ title: '', description: '', dueDate: '' });\r\n    };\r\n\r\n    const handleDeleteTask = (id) => {\r\n        setTasks(tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const handleToggleComplete = (id) => {\r\n        setTasks(tasks.map(task =>\r\n            task.id === id ? { ...task, completed: !task.completed } : task\r\n        ));\r\n    };\r\n\r\n    const handlePageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    const indexOfLastTask = currentPage * tasksPerPage;\r\n    const indexOfFirstTask = indexOfLastTask - tasksPerPage;\r\n    const currentTasks = filteredTasks.slice(indexOfFirstTask, indexOfLastTask);\r\n\r\n    const totalPages = Math.ceil(filteredTasks.length / tasksPerPage);\r\n\r\n    return (\r\n        <div className=\"task-page max-w-4xl mx-auto p-6\">\r\n            <h1 className=\"text-3xl font-semibold mb-6\">Task Management</h1>\r\n\r\n            {loading && <div>Loading tasks...</div>}\r\n            {error && <div className=\"text-red-500 mb-4\">{error}</div>}\r\n\r\n            {/* Filters */}\r\n            <div className=\"filters mb-6 flex justify-between\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"p-2 border border-gray-300 rounded\"\r\n                    placeholder=\"Search tasks...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n                <select\r\n                    className=\"p-2 border border-gray-300 rounded\"\r\n                    value={statusFilter}\r\n                    onChange={(e) => setStatusFilter(e.target.value)}\r\n                >\r\n                    <option value=\"All\">All</option>\r\n                    <option value=\"Completed\">Completed</option>\r\n                    <option value=\"Pending\">Pending</option>\r\n                </select>\r\n                <input\r\n                    type=\"date\"\r\n                    className=\"p-2 border border-gray-300 rounded\"\r\n                    value={dateRange.start}\r\n                    onChange={(e) => setDateRange({ ...dateRange, start: e.target.value })}\r\n                />\r\n                <input\r\n                    type=\"date\"\r\n                    className=\"p-2 border border-gray-300 rounded\"\r\n                    value={dateRange.end}\r\n                    onChange={(e) => setDateRange({ ...dateRange, end: e.target.value })}\r\n                />\r\n                <select\r\n                    className=\"p-2 border border-gray-300 rounded\"\r\n                    value={sortOrder}\r\n                    onChange={(e) => setSortOrder(e.target.value)}\r\n                >\r\n                    <option value=\"dueDate\">Due Date</option>\r\n                    <option value=\"title\">Title</option>\r\n                    <option value=\"completed\">Completion Status</option>\r\n                </select>\r\n            </div>\r\n\r\n            {/* Add Task Form */}\r\n            <div className=\"mb-6\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"p-2 border border-gray-300 rounded mb-2 w-full\"\r\n                    placeholder=\"Task title\"\r\n                    value={newTask.title}\r\n                    onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n                />\r\n                <textarea\r\n                    className=\"p-2 border border-gray-300 rounded mb-2 w-full\"\r\n                    placeholder=\"Task description\"\r\n                    value={newTask.description}\r\n                    onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n                />\r\n                <input\r\n                    type=\"date\"\r\n                    className=\"p-2 border border-gray-300 rounded mb-2 w-full\"\r\n                    value={newTask.dueDate}\r\n                    onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })}\r\n                />\r\n                <button\r\n                    className=\"bg-blue-500 text-white p-2 rounded-md\"\r\n                    onClick={handleAddTask}\r\n                >\r\n                    Add Task\r\n                </button>\r\n            </div>\r\n\r\n            {/* Task List */}\r\n            <div className=\"task-list\">\r\n                {currentTasks.length === 0 ? (\r\n                    <p>No tasks found</p>\r\n                ) : (\r\n                    <ul>\r\n                        {currentTasks.map(task => (\r\n                            <li key={task.id} className=\"task-item mb-4 p-4 border border-gray-200 rounded-md shadow-md hover:shadow-lg\">\r\n                                <h2 className=\"text-xl font-semibold\">{task.title}</h2>\r\n                                <p>{task.description}</p>\r\n                                <p className=\"text-sm text-gray-500\">Due: {task.dueDate}</p>\r\n                                <div className=\"task-actions mt-2 flex justify-between items-center\">\r\n                                    <button\r\n                                        onClick={() => handleToggleComplete(task.id)}\r\n                                        className={`px-4 py-2 rounded-md ${task.completed ? 'bg-green-500' : 'bg-red-500'} text-white`}\r\n                                    >\r\n                                        {task.completed ? 'Mark as Pending' : 'Mark as Completed'}\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => handleDeleteTask(task.id)}\r\n                                        className=\"bg-gray-500 text-white px-4 py-2 rounded-md\"\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n\r\n            {/* Pagination */}\r\n            {totalPages > 1 && (\r\n                <div className=\"pagination mt-6 flex justify-center\">\r\n                    <button\r\n                        onClick={() => handlePageChange(currentPage - 1)}\r\n                        disabled={currentPage === 1}\r\n                        className=\"bg-gray-300 text-gray-700 p-2 rounded-md mx-2\"\r\n                    >\r\n                        Prev\r\n                    </button>\r\n                    <span className=\"text-gray-700\">\r\n                        {currentPage} of {totalPages}\r\n                    </span>\r\n                    <button\r\n                        onClick={() => handlePageChange(currentPage + 1)}\r\n                        disabled={currentPage === totalPages}\r\n                        className=\"bg-gray-300 text-gray-700 p-2 rounded-md mx-2\"\r\n                    >\r\n                        Next\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}