{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\GIS\\\\client\\\\src\\\\pages\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quizLevels = {\n  beginner: [{\n    question: \"What does GIS stand for?\",\n    options: [\"Geospatial Information System\", \"Global Internet System\", \"Geographic Information System\", \"General Imaging Software\"],\n    correct: \"Geographic Information System\"\n  }, {\n    question: \"Which tool is commonly used for spatial analysis?\",\n    options: [\"Photoshop\", \"QGIS\", \"Excel\", \"Illustrator\"],\n    correct: \"QGIS\"\n  }],\n  intermediate: [{\n    question: \"Which type of data is used in GIS?\",\n    options: [\"Raster & Vector\", \"Audio & Video\", \"Text & Numbers\", \"All of the above\"],\n    correct: \"Raster & Vector\"\n  }, {\n    question: \"What is remote sensing used for?\",\n    options: [\"Mapping\", \"Weather forecasting\", \"Disaster management\", \"All of the above\"],\n    correct: \"All of the above\"\n  }],\n  advanced: [{\n    question: \"Which satellite imagery has the highest resolution?\",\n    options: [\"Landsat\", \"Sentinel-2\", \"WorldView-4\", \"MODIS\"],\n    correct: \"WorldView-4\"\n  }, {\n    question: \"What is LiDAR mainly used for?\",\n    options: [\"Underwater mapping\", \"Terrain elevation mapping\", \"Weather monitoring\", \"GPS tracking\"],\n    correct: \"Terrain elevation mapping\"\n  }]\n};\nconst Quiz = () => {\n  _s();\n  const [level, setLevel] = useState(\"beginner\");\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const questions = quizLevels[level];\n\n  // Handle option selection\n  const handleSelect = (questionIndex, option) => {\n    setAnswers({\n      ...answers,\n      [questionIndex]: option\n    });\n  };\n\n  // Calculate and submit score\n  const handleSubmit = () => {\n    let newScore = 0;\n    questions.forEach((q, index) => {\n      if (answers[index] === q.correct) {\n        newScore += 1;\n      }\n    });\n    setScore(newScore);\n    setSubmitted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col md:flex-row h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsSidebarOpen(!isSidebarOpen),\n      className: \"md:hidden p-3 bg-blue-600 text-white font-bold w-full\",\n      children: isSidebarOpen ? \"Close Levels\" : \"Select Level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-full md:w-1/4 bg-gray-800 text-white p-6 absolute md:relative transition-all duration-300 ${isSidebarOpen ? \"left-0\" : \"-left-full\"} md:left-0 md:block`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Select Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), Object.keys(quizLevels).map(lvl => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setLevel(lvl);\n          setAnswers({});\n          setSubmitted(false);\n          setScore(0);\n          setIsSidebarOpen(false);\n        },\n        className: `w-full p-3 mb-2 text-left rounded-md text-lg ${level === lvl ? \"bg-blue-500\" : \"hover:bg-gray-600\"}`,\n        children: lvl.charAt(0).toUpperCase() + lvl.slice(1)\n      }, lvl, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:w-3/4 p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-blue-700 mb-4 text-center\",\n        children: [level.charAt(0).toUpperCase() + level.slice(1), \" Quiz\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: q.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 space-y-2\",\n          children: q.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `block w-full text-left p-3 rounded-md border text-sm sm:text-base ${submitted ? option === q.correct ? \"bg-green-500 text-white\" : answers[index] === option ? \"bg-red-500 text-white\" : \"bg-gray-200\" : \"hover:bg-blue-200\"}`,\n            onClick: () => handleSelect(index, option),\n            disabled: submitted,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)), !submitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"w-full bg-blue-600 text-white font-bold py-3 mt-4 rounded-md hover:bg-blue-700\",\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center mt-4 font-bold text-lg\",\n        children: [\"Your Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"oN1GlgF0fUc20XAwLaxEi7t9SK8=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","quizLevels","beginner","question","options","correct","intermediate","advanced","Quiz","_s","level","setLevel","answers","setAnswers","submitted","setSubmitted","score","setScore","isSidebarOpen","setIsSidebarOpen","questions","handleSelect","questionIndex","option","handleSubmit","newScore","forEach","q","index","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","lvl","charAt","toUpperCase","slice","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/GIS/client/src/pages/Quiz.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst quizLevels = {\r\n  beginner: [\r\n    {\r\n      question: \"What does GIS stand for?\",\r\n      options: [\"Geospatial Information System\", \"Global Internet System\", \"Geographic Information System\", \"General Imaging Software\"],\r\n      correct: \"Geographic Information System\",\r\n    },\r\n    {\r\n      question: \"Which tool is commonly used for spatial analysis?\",\r\n      options: [\"Photoshop\", \"QGIS\", \"Excel\", \"Illustrator\"],\r\n      correct: \"QGIS\",\r\n    },\r\n  ],\r\n  intermediate: [\r\n    {\r\n      question: \"Which type of data is used in GIS?\",\r\n      options: [\"Raster & Vector\", \"Audio & Video\", \"Text & Numbers\", \"All of the above\"],\r\n      correct: \"Raster & Vector\",\r\n    },\r\n    {\r\n      question: \"What is remote sensing used for?\",\r\n      options: [\"Mapping\", \"Weather forecasting\", \"Disaster management\", \"All of the above\"],\r\n      correct: \"All of the above\",\r\n    },\r\n  ],\r\n  advanced: [\r\n    {\r\n      question: \"Which satellite imagery has the highest resolution?\",\r\n      options: [\"Landsat\", \"Sentinel-2\", \"WorldView-4\", \"MODIS\"],\r\n      correct: \"WorldView-4\",\r\n    },\r\n    {\r\n      question: \"What is LiDAR mainly used for?\",\r\n      options: [\"Underwater mapping\", \"Terrain elevation mapping\", \"Weather monitoring\", \"GPS tracking\"],\r\n      correct: \"Terrain elevation mapping\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Quiz = () => {\r\n  const [level, setLevel] = useState(\"beginner\");\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  const questions = quizLevels[level];\r\n\r\n  // Handle option selection\r\n  const handleSelect = (questionIndex, option) => {\r\n    setAnswers({ ...answers, [questionIndex]: option });\r\n  };\r\n\r\n  // Calculate and submit score\r\n  const handleSubmit = () => {\r\n    let newScore = 0;\r\n    questions.forEach((q, index) => {\r\n      if (answers[index] === q.correct) {\r\n        newScore += 1;\r\n      }\r\n    });\r\n    setScore(newScore);\r\n    setSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row h-screen\">\r\n      {/* Sidebar Toggle Button (Only visible on small screens) */}\r\n      <button\r\n        onClick={() => setIsSidebarOpen(!isSidebarOpen)}\r\n        className=\"md:hidden p-3 bg-blue-600 text-white font-bold w-full\"\r\n      >\r\n        {isSidebarOpen ? \"Close Levels\" : \"Select Level\"}\r\n      </button>\r\n\r\n      {/* Sidebar for selecting level */}\r\n      <div className={`w-full md:w-1/4 bg-gray-800 text-white p-6 absolute md:relative transition-all duration-300 ${isSidebarOpen ? \"left-0\" : \"-left-full\"} md:left-0 md:block`}>\r\n        <h2 className=\"text-xl font-bold mb-4\">Select Level</h2>\r\n        {Object.keys(quizLevels).map((lvl) => (\r\n          <button\r\n            key={lvl}\r\n            onClick={() => {\r\n              setLevel(lvl);\r\n              setAnswers({});\r\n              setSubmitted(false);\r\n              setScore(0);\r\n              setIsSidebarOpen(false);\r\n            }}\r\n            className={`w-full p-3 mb-2 text-left rounded-md text-lg ${level === lvl ? \"bg-blue-500\" : \"hover:bg-gray-600\"\r\n              }`}\r\n          >\r\n            {lvl.charAt(0).toUpperCase() + lvl.slice(1)}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Quiz Section */}\r\n      <div className=\"w-full md:w-3/4 p-6\">\r\n        <h2 className=\"text-2xl font-bold text-blue-700 mb-4 text-center\">\r\n          {level.charAt(0).toUpperCase() + level.slice(1)} Quiz\r\n        </h2>\r\n\r\n        {questions.map((q, index) => (\r\n          <div key={index} className=\"mb-6\">\r\n            <h3 className=\"text-lg font-semibold\">{q.question}</h3>\r\n            <div className=\"mt-2 space-y-2\">\r\n              {q.options.map((option) => (\r\n                <button\r\n                  key={option}\r\n                  className={`block w-full text-left p-3 rounded-md border text-sm sm:text-base ${submitted\r\n                      ? option === q.correct\r\n                        ? \"bg-green-500 text-white\"\r\n                        : answers[index] === option\r\n                          ? \"bg-red-500 text-white\"\r\n                          : \"bg-gray-200\"\r\n                      : \"hover:bg-blue-200\"\r\n                    }`}\r\n                  onClick={() => handleSelect(index, option)}\r\n                  disabled={submitted}\r\n                >\r\n                  {option}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        {!submitted ? (\r\n          <button\r\n            onClick={handleSubmit}\r\n            className=\"w-full bg-blue-600 text-white font-bold py-3 mt-4 rounded-md hover:bg-blue-700\"\r\n          >\r\n            Submit Quiz\r\n          </button>\r\n        ) : (\r\n          <p className=\"text-center mt-4 font-bold text-lg\">\r\n            Your Score: {score} / {questions.length}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}