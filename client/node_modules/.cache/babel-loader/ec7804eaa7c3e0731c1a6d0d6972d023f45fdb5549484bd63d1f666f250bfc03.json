{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\GIS\\\\client\\\\src\\\\pages\\\\Try.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quizData = [{\n  question: \"What does GIS stand for?\",\n  options: [\"Geospatial Information System\", \"Global Internet System\", \"Geographic Information System\", \"General Imaging Software\"],\n  correct: \"Geographic Information System\"\n}, {\n  question: \"Which tool is commonly used for spatial analysis?\",\n  options: [\"Photoshop\", \"QGIS\", \"Excel\", \"Illustrator\"],\n  correct: \"QGIS\"\n}, {\n  question: \"Remote sensing primarily involves the use of?\",\n  options: [\"Cameras\", \"Satellites\", \"Telescopes\", \"Radios\"],\n  correct: \"Satellites\"\n}];\nconst Quiz = () => {\n  _s();\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n\n  // Handle option selection\n  const handleSelect = (questionIndex, option) => {\n    setAnswers({\n      ...answers,\n      [questionIndex]: option\n    });\n  };\n\n  // Calculate and submit score\n  const handleSubmit = () => {\n    let newScore = 0;\n    quizData.forEach((q, index) => {\n      if (answers[index] === q.correct) {\n        newScore += 1;\n      }\n    });\n    setScore(newScore);\n    setSubmitted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-lg mx-auto p-6 bg-white rounded-lg shadow-lg border border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-center text-blue-700 mb-4\",\n      children: \"Geospatial Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), quizData.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: q.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 space-y-2\",\n        children: q.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `block w-full text-left p-2 rounded-md border ${submitted ? option === q.correct ? \"bg-green-500 text-white\" : answers[index] === option ? \"bg-red-500 text-white\" : \"bg-gray-200\" : \"hover:bg-blue-200\"}`,\n          onClick: () => handleSelect(index, option),\n          disabled: submitted,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), !submitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"w-full bg-blue-600 text-white font-bold py-2 mt-4 rounded-md hover:bg-blue-700\",\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center mt-4 font-bold text-lg\",\n      children: [\"Your Score: \", score, \" / \", quizData.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"+Aqcfdnwuv1nbWYk+09sNSSbSD8=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","quizData","question","options","correct","Quiz","_s","answers","setAnswers","submitted","setSubmitted","score","setScore","handleSelect","questionIndex","option","handleSubmit","newScore","forEach","q","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/GIS/client/src/pages/Try.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst quizData = [\r\n  {\r\n    question: \"What does GIS stand for?\",\r\n    options: [\"Geospatial Information System\", \"Global Internet System\", \"Geographic Information System\", \"General Imaging Software\"],\r\n    correct: \"Geographic Information System\",\r\n  },\r\n  {\r\n    question: \"Which tool is commonly used for spatial analysis?\",\r\n    options: [\"Photoshop\", \"QGIS\", \"Excel\", \"Illustrator\"],\r\n    correct: \"QGIS\",\r\n  },\r\n  {\r\n    question: \"Remote sensing primarily involves the use of?\",\r\n    options: [\"Cameras\", \"Satellites\", \"Telescopes\", \"Radios\"],\r\n    correct: \"Satellites\",\r\n  },\r\n];\r\n\r\nconst Quiz = () => {\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n\r\n  // Handle option selection\r\n  const handleSelect = (questionIndex, option) => {\r\n    setAnswers({ ...answers, [questionIndex]: option });\r\n  };\r\n\r\n  // Calculate and submit score\r\n  const handleSubmit = () => {\r\n    let newScore = 0;\r\n    quizData.forEach((q, index) => {\r\n      if (answers[index] === q.correct) {\r\n        newScore += 1;\r\n      }\r\n    });\r\n    setScore(newScore);\r\n    setSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-lg mx-auto p-6 bg-white rounded-lg shadow-lg border border-gray-200\">\r\n      <h2 className=\"text-2xl font-bold text-center text-blue-700 mb-4\">Geospatial Quiz</h2>\r\n\r\n      {quizData.map((q, index) => (\r\n        <div key={index} className=\"mb-6\">\r\n          <h3 className=\"text-lg font-semibold\">{q.question}</h3>\r\n          <div className=\"mt-2 space-y-2\">\r\n            {q.options.map((option) => (\r\n              <button\r\n                key={option}\r\n                className={`block w-full text-left p-2 rounded-md border ${\r\n                  submitted\r\n                    ? option === q.correct\r\n                      ? \"bg-green-500 text-white\"\r\n                      : answers[index] === option\r\n                      ? \"bg-red-500 text-white\"\r\n                      : \"bg-gray-200\"\r\n                    : \"hover:bg-blue-200\"\r\n                }`}\r\n                onClick={() => handleSelect(index, option)}\r\n                disabled={submitted}\r\n              >\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {!submitted ? (\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"w-full bg-blue-600 text-white font-bold py-2 mt-4 rounded-md hover:bg-blue-700\"\r\n        >\r\n          Submit Quiz\r\n        </button>\r\n      ) : (\r\n        <p className=\"text-center mt-4 font-bold text-lg\">\r\n          Your Score: {score} / {quizData.length}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAG,CACf;EACEC,QAAQ,EAAE,0BAA0B;EACpCC,OAAO,EAAE,CAAC,+BAA+B,EAAE,wBAAwB,EAAE,+BAA+B,EAAE,0BAA0B,CAAC;EACjIC,OAAO,EAAE;AACX,CAAC,EACD;EACEF,QAAQ,EAAE,mDAAmD;EAC7DC,OAAO,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,CAAC;EACtDC,OAAO,EAAE;AACX,CAAC,EACD;EACEF,QAAQ,EAAE,+CAA+C;EACzDC,OAAO,EAAE,CAAC,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,QAAQ,CAAC;EAC1DC,OAAO,EAAE;AACX,CAAC,CACF;AAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMe,YAAY,GAAGA,CAACC,aAAa,EAAEC,MAAM,KAAK;IAC9CP,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAE,CAACO,aAAa,GAAGC;IAAO,CAAC,CAAC;EACrD,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,QAAQ,GAAG,CAAC;IAChBhB,QAAQ,CAACiB,OAAO,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;MAC7B,IAAIb,OAAO,CAACa,KAAK,CAAC,KAAKD,CAAC,CAACf,OAAO,EAAE;QAChCa,QAAQ,IAAI,CAAC;MACf;IACF,CAAC,CAAC;IACFL,QAAQ,CAACK,QAAQ,CAAC;IAClBP,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACEV,OAAA;IAAKqB,SAAS,EAAC,2EAA2E;IAAAC,QAAA,gBACxFtB,OAAA;MAAIqB,SAAS,EAAC,mDAAmD;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAErFzB,QAAQ,CAAC0B,GAAG,CAAC,CAACR,CAAC,EAAEC,KAAK,kBACrBpB,OAAA;MAAiBqB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBAC/BtB,OAAA;QAAIqB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAEH,CAAC,CAACjB;MAAQ;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvD1B,OAAA;QAAKqB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BH,CAAC,CAAChB,OAAO,CAACwB,GAAG,CAAEZ,MAAM,iBACpBf,OAAA;UAEEqB,SAAS,EAAE,gDACTZ,SAAS,GACLM,MAAM,KAAKI,CAAC,CAACf,OAAO,GAClB,yBAAyB,GACzBG,OAAO,CAACa,KAAK,CAAC,KAAKL,MAAM,GACzB,uBAAuB,GACvB,aAAa,GACf,mBAAmB,EACtB;UACHa,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACO,KAAK,EAAEL,MAAM,CAAE;UAC3Cc,QAAQ,EAAEpB,SAAU;UAAAa,QAAA,EAEnBP;QAAM,GAbFA,MAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcL,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GArBEN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsBV,CACN,CAAC,EAED,CAACjB,SAAS,gBACTT,OAAA;MACE4B,OAAO,EAAEZ,YAAa;MACtBK,SAAS,EAAC,gFAAgF;MAAAC,QAAA,EAC3F;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAET1B,OAAA;MAAGqB,SAAS,EAAC,oCAAoC;MAAAC,QAAA,GAAC,cACpC,EAACX,KAAK,EAAC,KAAG,EAACV,QAAQ,CAAC6B,MAAM;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAlEID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAoEV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}