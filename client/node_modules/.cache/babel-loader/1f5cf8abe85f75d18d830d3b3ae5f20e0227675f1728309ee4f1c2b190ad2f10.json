{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\GIS\\\\client\\\\src\\\\pages\\\\ADMIN\\\\admAlert.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst admAlert = () => {\n  _s();\n  const [message, setMessage] = useState();\n  const [userId, setUserId] = useState();\n  const [error, setError] = useState();\n  const [mess, setMess] = useState();\n  const postAlert = async (message, userId) => {\n    try {\n      const response = await axios.post('http://localhost:5000/alert/makeAlert', {\n        message,\n        userId\n      });\n      console.log(\"Alert send to the user\", response.data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"admAlert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter your alert\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter the user id\",\n        value: userId,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClic: postAlert,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(admAlert, \"LbYKAzq0E2Ga65car2N222nsEZE=\");\nexport default admAlert;","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","admAlert","_s","message","setMessage","userId","setUserId","error","setError","mess","setMess","postAlert","response","post","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClic"],"sources":["C:/Users/user/Desktop/GIS/client/src/pages/ADMIN/admAlert.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nconst admAlert = () => {\r\n    const [message ,setMessage] =  useState();\r\n    const [userId ,setUserId] = useState();\r\n    const [error, setError] = useState();\r\nconst [mess,setMess] = useState();\r\n    const postAlert = async(message,userId)=>{\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/alert/makeAlert',{message,userId})\r\n            console.log(\"Alert send to the user\",response.data)\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n  return (\r\n    <>\r\n          <div>admAlert</div>\r\n          {error ? <p>{error}</p> : <p>{mess}</p>}\r\n          <>\r\n          <input type=\"text\" placeholder=\"enter your alert\" value={message} onChange={(e) =>setMessage(e.target.value)} />\r\n              <input type=\"text\" placeholder=\"enter the user id\" value={userId} onChange={(e) => setUserId(e.target.value)} />\r\n          <button onClic={postAlert}>SEND</button>\r\n          </>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default admAlert"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAIT,QAAQ,CAAC,CAAC;EACzC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC;EACxC,MAAM,CAACc,IAAI,EAACC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC;EAC7B,MAAMgB,SAAS,GAAG,MAAAA,CAAMR,OAAO,EAACE,MAAM,KAAG;IACrC,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,uCAAuC,EAAC;QAACV,OAAO;QAACE;MAAM,CAAC,CAAC;MAC3FS,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAACH,QAAQ,CAACI,IAAI,CAAC;IACvD,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAACJ,OAAO,CAAC;IAC3B;EACJ,CAAC;EACH,oBACEL,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACMnB,OAAA;MAAAmB,QAAA,EAAK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAClBd,KAAK,gBAAGT,OAAA;MAAAmB,QAAA,EAAIV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAAGvB,OAAA;MAAAmB,QAAA,EAAIR;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCvB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,gBACAnB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,kBAAkB;QAACC,KAAK,EAAErB,OAAQ;QAACsB,QAAQ,EAAGC,CAAC,IAAItB,UAAU,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5GvB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,mBAAmB;QAACC,KAAK,EAAEnB,MAAO;QAACoB,QAAQ,EAAGC,CAAC,IAAKpB,SAAS,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpHvB,OAAA;QAAQ8B,MAAM,EAAEjB,SAAU;QAAAM,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACtC,CAAC;EAAA,eAEP,CAAC;AAEP,CAAC;AAAAnB,EAAA,CAzBKD,QAAQ;AA2Bd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}