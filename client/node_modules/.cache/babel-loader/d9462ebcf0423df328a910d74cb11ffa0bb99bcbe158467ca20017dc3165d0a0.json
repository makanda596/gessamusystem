{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\GIS\\\\client\\\\src\\\\pages\\\\Try.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = ({\n  userId\n}) => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!userId) {\n      setError(\"User ID is missing.\");\n      setLoading(false);\n      return;\n    }\n    const fetchAlerts = async () => {\n      try {\n        const response = await axios.get(`https://gessamubackend.onrender.com/alert/takeAlert/${userId}`);\n        setAlerts(response.data.alerts);\n      } catch (err) {\n        var _err$response, _err$response2, _err$response2$data;\n        console.error(\"Error fetching alerts:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"An error occurred while fetching alerts\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAlerts();\n  }, [userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-600\",\n      children: \"Loading alerts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-red-600 font-semibold\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-lg mx-auto p-6 bg-white rounded-lg shadow-lg border border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold text-blue-700 mb-4\",\n      children: \"Your Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), alerts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 text-center\",\n      children: \"No alerts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-4\",\n      children: alerts.map(alert => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `p-4 rounded-md shadow-sm text-white ${getStatusColor(alert.status)}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold\",\n          children: alert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium mt-1\",\n          children: alert.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)]\n      }, alert._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n// Function to apply different colors based on alert status\n_s(Alert, \"vxu+AwvM2Pw6sGSp/GKYKQQ5vqA=\");\n_c = Alert;\nconst getStatusColor = status => {\n  switch (status.toLowerCase()) {\n    case \"urgent\":\n      return \"bg-red-500\";\n    // Red for urgent alerts\n    case \"pending\":\n      return \"bg-yellow-500\";\n    // Yellow for pending\n    case \"resolved\":\n      return \"bg-green-500\";\n    // Green for resolved\n    default:\n      return \"bg-gray-500\";\n    // Default gray\n  }\n};\nexport default Alert;\nvar _c;\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Alert","userId","_s","alerts","setAlerts","loading","setLoading","error","setError","fetchAlerts","response","get","data","err","_err$response","_err$response2","_err$response2$data","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","alert","getStatusColor","status","_id","_c","toLowerCase","$RefreshReg$"],"sources":["C:/Users/user/Desktop/GIS/client/src/pages/Try.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Alert = ({ userId }) => {\r\n    const [alerts, setAlerts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            setError(\"User ID is missing.\");\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        const fetchAlerts = async () => {\r\n            try {\r\n                const response = await axios.get(`https://gessamubackend.onrender.com/alert/takeAlert/${userId}`);\r\n                setAlerts(response.data.alerts);\r\n            } catch (err) {\r\n                console.error(\"Error fetching alerts:\", err.response?.data || err.message);\r\n                setError(err.response?.data?.message || \"An error occurred while fetching alerts\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchAlerts();\r\n    }, [userId]);\r\n\r\n    if (loading) {\r\n        return <div className=\"text-center text-gray-600\">Loading alerts...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"text-center text-red-600 font-semibold\">{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"max-w-lg mx-auto p-6 bg-white rounded-lg shadow-lg border border-gray-200\">\r\n            <h2 className=\"text-xl font-bold text-blue-700 mb-4\">Your Alerts</h2>\r\n\r\n            {alerts.length === 0 ? (\r\n                <p className=\"text-gray-500 text-center\">No alerts available</p>\r\n            ) : (\r\n                <ul className=\"space-y-4\">\r\n                    {alerts.map((alert) => (\r\n                        <li key={alert._id} className={`p-4 rounded-md shadow-sm text-white ${getStatusColor(alert.status)}`}>\r\n                            <p className=\"text-lg font-semibold\">{alert.message}</p>\r\n                            <p className=\"text-sm font-medium mt-1\">{alert.status}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Function to apply different colors based on alert status\r\nconst getStatusColor = (status) => {\r\n    switch (status.toLowerCase()) {\r\n        case \"urgent\":\r\n            return \"bg-red-500\"; // Red for urgent alerts\r\n        case \"pending\":\r\n            return \"bg-yellow-500\"; // Yellow for pending\r\n        case \"resolved\":\r\n            return \"bg-green-500\"; // Green for resolved\r\n        default:\r\n            return \"bg-gray-500\"; // Default gray\r\n    }\r\n};\r\n\r\nexport default Alert;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}