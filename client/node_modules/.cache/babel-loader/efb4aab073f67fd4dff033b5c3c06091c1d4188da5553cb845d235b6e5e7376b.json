{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\GIS\\\\client\\\\src\\\\pages\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const showTask = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/task/takeTask\");\n      setTasks(response.data);\n    } catch (error) {\n      setError('Failed to load tasks. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    showTask();\n  }, []);\n  const [details, setDetails] = useState(null);\n  const fetchDetails = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/auth/profile\", {\n        withCredentials: true\n      });\n      console.log(response.data);\n      setDetails(response.data);\n    } catch (error) {\n      console.log(\"You need to log in to access the dashboard.\");\n    }\n  };\n  useEffect(() => {\n    fetchDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-semibold mb-6\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: tasks.length === 0 && !loading && !error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No tasks available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"task-item mb-4 p-4 border border-gray-200 rounded-md shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/task/${task._id}`,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: [task.title, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"level: \", task.level]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"Due: \", task.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions mt-2 flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                // onClick={() => handleToggleComplete(task.id)}\n                className: `px-4 py-2 rounded-md ${task.completed ? 'bg-green-500' : 'bg-red-500'} text-white`,\n                children: task.completed ? 'Mark as Pending' : 'Mark as Completed'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                // onClick={() => handleDeleteTask(task.id)}\n                className: \"bg-gray-500 text-white px-4 py-2 rounded-md\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Tasks, \"4tQVORR94lebWxkHVxFMnm79eGQ=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","axios","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","tasks","setTasks","loading","setLoading","error","setError","showTask","response","get","data","details","setDetails","fetchDetails","withCredentials","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","task","href","_id","target","rel","title","description","level","date","completed","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/GIS/client/src/pages/Tasks.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst Tasks = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const showTask = async () => { \r\n        try {\r\n            const response = await axios.get(\"http://localhost:5000/task/takeTask\");\r\n            setTasks(response.data);\r\n        } catch (error) {\r\n            setError('Failed to load tasks. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        showTask();\r\n    }, []);\r\n\r\n    const [details, setDetails] = useState(null);\r\n\r\n    const fetchDetails = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:5000/auth/profile\", {\r\n                withCredentials: true,\r\n            });\r\n            console.log(response.data)\r\n            setDetails(response.data);\r\n        } catch (error) {\r\n            console.log(\"You need to log in to access the dashboard.\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchDetails();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Navbar  />\r\n            <div className=\"p-6\">\r\n                <h1 className=\"text-3xl font-semibold mb-6\">Tasks</h1>\r\n                {loading && <div>Loading tasks...</div>}\r\n                {error && <div className=\"text-red-500\">{error}</div>}\r\n                <div className=\"task-list\">\r\n                    {tasks.length === 0 && !loading && !error ? (\r\n                        <div>No tasks available.</div>\r\n                    ) : (\r\n                        <ul>\r\n                            {tasks.map((task) => (\r\n                                <li key={task.id} className=\"task-item mb-4 p-4 border border-gray-200 rounded-md shadow-md\">\r\n                                    <h2 className=\"text-xl font-semibold\">\r\n                                        <a href={`/task/${task._id}`} target=\"_blank\" rel=\"noreferrer\">\r\n                                            {task.title} {/* or whatever field represents the task */}\r\n                                        </a>\r\n                                    </h2> <p>{task.description}</p>\r\n                                    <p className=\"text-sm text-gray-500\">level: {task.level}</p>\r\n                                    <p className=\"text-sm text-gray-500\">Due: {task.date}</p>\r\n                                    <div className=\"task-actions mt-2 flex justify-between items-center\">\r\n                                        <button\r\n                                            // onClick={() => handleToggleComplete(task.id)}\r\n                                            className={`px-4 py-2 rounded-md ${task.completed ? 'bg-green-500' : 'bg-red-500'} text-white`}\r\n                                        >\r\n                                            {task.completed ? 'Mark as Pending' : 'Mark as Completed'}\r\n                                        </button>\r\n                                        <button\r\n                                            // onClick={() => handleDeleteTask(task.id)}\r\n                                            className=\"bg-gray-500 text-white px-4 py-2 rounded-md\"\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}