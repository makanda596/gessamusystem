{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\GIS\\\\client\\\\src\\\\pages\\\\Allprojects.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Allprojects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [year, setYear] = useState(''); // State to store year input\n  const [error, setError] = useState('');\n  const onSubmit = async () => {\n    if (!year) {\n      setError('Please enter a year.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:5000/projects/getprojects?year=${year}`);\n      setProjects(response.data);\n    } catch (error) {\n      console.error(error); // Log the error for debugging\n      setError('Failed to fetch projects. Please check the year and try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter your year\",\n      value: year,\n      onChange: e => setYear(e.target.value) // Update year state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: onSubmit,\n      children: \"CLICK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: projects.length > 0 ? projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.doc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Year: \", project.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No projects found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Allprojects, \"nTsOVipDhRy9hVDwLXK0K1ESL4A=\");\n_c = Allprojects;\nexport default Allprojects;\nvar _c;\n$RefreshReg$(_c, \"Allprojects\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Allprojects","_s","projects","setProjects","year","setYear","error","setError","onSubmit","response","get","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","length","map","project","index","title","description","doc","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/GIS/client/src/pages/Allprojects.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Allprojects = () => {\r\n    const [projects, setProjects] = useState([]);\r\n    const [year, setYear] = useState(''); // State to store year input\r\n    const [error, setError] = useState('');\r\n\r\n    const onSubmit = async () => {\r\n        if (!year) {\r\n            setError('Please enter a year.');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/projects/getprojects?year=${year}`);\r\n            setProjects(response.data);\r\n        } catch (error) {\r\n            console.error(error); // Log the error for debugging\r\n            setError('Failed to fetch projects. Please check the year and try again.');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>All Projects</h1>\r\n            <p>Enter year</p>\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Enter your year\"\r\n                value={year}\r\n                onChange={(e) => setYear(e.target.value)} // Update year state\r\n            />\r\n            <button type=\"submit\" onClick={onSubmit}>CLICK</button>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <div>\r\n                {projects.length > 0 ? (\r\n                    projects.map((project, index) => (\r\n                        <div key={index}>\r\n                            <h2>{project.title}</h2>\r\n                            <p>{project.description}</p>\r\n                            <p>{project.doc}</p>\r\n                            <p>Year: {project.year}</p>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No projects found.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Allprojects;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}