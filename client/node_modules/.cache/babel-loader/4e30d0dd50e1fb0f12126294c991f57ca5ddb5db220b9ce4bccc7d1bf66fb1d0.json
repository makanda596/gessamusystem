{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\SYSTEMS\\\\GIS\\\\client\\\\src\\\\pages\\\\Try.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [image, setImage] = useState(null); // Make sure to initialize as null\n\n  // Handle the file change\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(file); // Store the file in state\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (image) {\n      const formData = new FormData();\n      formData.append('image', image); // Append the file to FormData\n\n      try {\n        const res = await axios.post('http://localhost:5000/images/oneImage', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data' // Set the content type to multipart/form-data for file uploads\n          }\n        });\n        console.log(res);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    } else {\n      console.log('No image selected');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange // Update state with the selected file\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"azb7M8tR7S/vp1+UqWJMufJLR5I=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","_s","image","setImage","handleFileChange","e","file","target","files","handleSubmit","preventDefault","formData","FormData","append","res","post","headers","console","log","error","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/SYSTEMS/GIS/client/src/pages/Try.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = () => {\r\n  const [image, setImage] = useState(null); // Make sure to initialize as null\r\n\r\n  // Handle the file change\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file); // Store the file in state\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (image) {\r\n      const formData = new FormData();\r\n      formData.append('image', image); // Append the file to FormData\r\n\r\n      try {\r\n        const res = await axios.post('http://localhost:5000/images/oneImage', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data', // Set the content type to multipart/form-data for file uploads\r\n          },\r\n        });\r\n        console.log(res);\r\n      } catch (error) {\r\n        console.error('Error uploading image:', error);\r\n      }\r\n    } else {\r\n      console.log('No image selected');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleFileChange} // Update state with the selected file\r\n        />\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACRH,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAIR,KAAK,EAAE;MACT,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEX,KAAK,CAAC,CAAC,CAAC;;MAEjC,IAAI;QACF,MAAMY,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,uCAAuC,EAAEJ,QAAQ,EAAE;UAC9EK,OAAO,EAAE;YACP,cAAc,EAAE,qBAAqB,CAAE;UACzC;QACF,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;MAClB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,eACErB,OAAA;MAAMsB,QAAQ,EAAEZ,YAAa;MAAAW,QAAA,gBAC3BrB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAEnB,gBAAiB,CAAC;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACF5B,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5CID,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}