{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\GIS\\\\client\\\\src\\\\pages\\\\OneTasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom'; // Import useParams hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OneTask = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Use useParams to get the 'id' from the URL\n\n  const [task, setTask] = useState(null);\n  const [error, setError] = useState('');\n  const showSpecific = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/task/onetask/${id}`); // Fetch task data using 'id'\n      setTask(response.data);\n    } catch (error) {\n      setError('Failed to load task. Please try again later.');\n    }\n  };\n  useEffect(() => {\n    showSpecific();\n  }, []); // Trigger whenever 'id' changes\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n  if (!task) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Task Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this), \" \", task.task]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this), \" \", task.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(OneTask, \"w1RfU4HCx5Atu021JFUUijqmlpw=\", false, function () {\n  return [useParams];\n});\n_c = OneTask;\nexport default OneTask;\nvar _c;\n$RefreshReg$(_c, \"OneTask\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","OneTask","_s","id","task","setTask","error","setError","showSpecific","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/GIS/client/src/pages/OneTasks.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom';  // Import useParams hook\r\n\r\nconst OneTask = () => {\r\n    const { id } = useParams();  // Use useParams to get the 'id' from the URL\r\n\r\n    const [task, setTask] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const showSpecific = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/task/onetask/${id}`);  // Fetch task data using 'id'\r\n            setTask(response.data);\r\n        } catch (error) {\r\n            setError('Failed to load task. Please try again later.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        showSpecific();\r\n    }, []);  // Trigger whenever 'id' changes\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    if (!task) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Task Details</h1>\r\n            <p><strong>Task Name:</strong> {task.task}</p>  {/* Assuming your task has a 'name' */}\r\n            <p><strong>Description:</strong> {task.description}</p>  {/* Assuming your task has a 'description' */}\r\n            {/* Add more task fields as necessary */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OneTask;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAE;;EAE7B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,sCAAsCP,EAAE,EAAE,CAAC,CAAC,CAAE;MAC/EE,OAAO,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,QAAQ,CAAC,8CAA8C,CAAC;IAC5D;EACJ,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZa,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,IAAIF,KAAK,EAAE;IACP,oBAAON,OAAA;MAAAY,QAAA,EAAMN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7B;EAEA,IAAI,CAACZ,IAAI,EAAE;IACP,oBAAOJ,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIhB,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBhB,OAAA;MAAAY,QAAA,gBAAGZ,OAAA;QAAAY,QAAA,EAAQ;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACZ,IAAI,CAACA,IAAI;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,MAAE,eAChDhB,OAAA;MAAAY,QAAA,gBAAGZ,OAAA;QAAAY,QAAA,EAAQ;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACZ,IAAI,CAACa,WAAW;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,MAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExD,CAAC;AAEd,CAAC;AAACd,EAAA,CAnCID,OAAO;EAAA,QACMH,SAAS;AAAA;AAAAoB,EAAA,GADtBjB,OAAO;AAqCb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}