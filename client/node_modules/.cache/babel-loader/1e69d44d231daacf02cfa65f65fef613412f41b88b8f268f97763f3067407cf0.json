{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\n\n// Set your API endpoints\nconst USER_API = \"https://gessamubackend.onrender.com/auth\";\nconst ADM_API = \"https://gessamubackend.onrender.com/admin\";\nexport const useAuthStore = create(set => ({\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  messages: null,\n  isCheckingAuth: true,\n  message: null,\n  // Signup method\n  signup: async (firstName, lastName, admNo, year, email, phoneNumber, password, avatar) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${USER_API}/signup`, {\n        firstName,\n        lastName,\n        admNo,\n        year,\n        email,\n        phoneNumber,\n        password,\n        avatar\n      });\n      set({\n        user: response.data.user,\n        isLoading: false,\n        isAuthenticated: true\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      set({\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error signing up\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Admin Login\n  adminLogin: async (email, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post('https://gessamubackend.onrender.com/adminLogin', {\n        email,\n        password\n      });\n      set({\n        admin: response.data.admin,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      set({\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error logging in\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // User Login\n  login: async (admNo, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${USER_API}/login`, {\n        admNo,\n        password\n      });\n      localStorage.setItem(\"token\", response.data.token);\n      set({\n        user: response.data.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      set({\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Error logging in\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Logout\n  logout: async () => {\n    try {\n      await axios.post('https://gessamubackend.onrender.com/auth/logout', null, {\n        withCredentials: true\n      });\n      localStorage.removeItem(\"token\");\n      set({\n        user: null,\n        isAuthenticated: false,\n        isCheckingAuth: false\n      });\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      set({\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Error logging out\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Forgot Password\n  forgotPassword: async email => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${USER_API}/password`, {\n        email\n      });\n      set({\n        message: response.data.message,\n        isLoading: false\n      });\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      set({\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || \"Error sending reset password email\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Check Auth Status\n  checkAuth: async () => {\n    set({\n      isCheckingAuth: true,\n      error: null\n    });\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get('https://gessamubackend.onrender.com/auth/check-auth', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      set({\n        user: response.data.user,\n        isAuthenticated: true,\n        isCheckingAuth: false\n      });\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      set({\n        isAuthenticated: false,\n        isCheckingAuth: false,\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || \"Failed to authenticate\"\n      });\n    }\n  },\n  // Get Projects\n  getProjects: async () => {\n    try {\n      const response = await axios.get(`${USER_API}/task/takeTask`);\n      set({\n        tasks: response.data.tasks\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  // Post Task\n  postTask: async (title, description, date, level) => {\n    try {\n      const response = await axios.post(`${USER_API}/task/makeTask`, {\n        title,\n        description,\n        date,\n        level\n      });\n      set({\n        task: response.data.task\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  // Post Project\n  postProject: async (title, description, year, reference) => {\n    try {\n      const response = await axios.post(`${USER_API}/projects/sendprojects`, {\n        title,\n        description,\n        year,\n        reference\n      });\n      set({\n        project: response.data.project\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}));","map":{"version":3,"names":["create","axios","USER_API","ADM_API","useAuthStore","set","user","isAuthenticated","isLoading","error","messages","isCheckingAuth","message","signup","firstName","lastName","admNo","year","email","phoneNumber","password","avatar","response","post","data","_error$response","_error$response$data","adminLogin","admin","_error$response2","_error$response2$data","login","localStorage","setItem","token","_error$response3","_error$response3$data","logout","withCredentials","removeItem","_error$response4","_error$response4$data","forgotPassword","_error$response5","_error$response5$data","checkAuth","getItem","get","headers","Authorization","_error$response6","_error$response6$data","getProjects","tasks","console","log","postTask","title","description","date","level","task","postProject","reference","project"],"sources":["C:/Users/user/Desktop/GIS/client/src/store/auth.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport axios from 'axios';\r\n\r\n// Set your API endpoints\r\nconst USER_API = \"https://gessamubackend.onrender.com/auth\";\r\nconst ADM_API = \"https://gessamubackend.onrender.com/admin\";\r\n\r\nexport const useAuthStore = create((set) => ({\r\n    user: null,\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n    error: null,\r\n    messages: null,\r\n    isCheckingAuth: true,\r\n    message: null,\r\n    // Signup method\r\n    signup: async (firstName, lastName, admNo, year, email, phoneNumber, password, avatar) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${USER_API}/signup`, { firstName, lastName, admNo, year, email, phoneNumber, password, avatar });\r\n            set({ user: response.data.user, isLoading: false, isAuthenticated: true });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error signing up\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Admin Login\r\n    adminLogin: async (email, password) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post('https://gessamubackend.onrender.com/adminLogin', { email, password });\r\n            set({ admin: response.data.admin, isAuthenticated: true, isLoading: false, error: null });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error logging in\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // User Login\r\n    login: async (admNo, password) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${USER_API}/login`, { admNo, password });\r\n            localStorage.setItem(\"token\", response.data.token);\r\n            set({ user: response.data.user, isAuthenticated: true, isLoading: false, error: null });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error logging in\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Logout\r\n    logout: async () => {\r\n        try {\r\n            await axios.post('https://gessamubackend.onrender.com/auth/logout', null, { withCredentials: true });\r\n            localStorage.removeItem(\"token\");\r\n            set({ user: null, isAuthenticated: false, isCheckingAuth: false });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error logging out\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Forgot Password\r\n    forgotPassword: async (email) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${USER_API}/password`, { email });\r\n            set({ message: response.data.message, isLoading: false });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error sending reset password email\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Check Auth Status\r\n    checkAuth: async () => {\r\n        set({ isCheckingAuth: true, error: null });\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            const response = await axios.get('https://gessamubackend.onrender.com/auth/check-auth', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n                withCredentials: true\r\n            });\r\n            set({ user: response.data.user, isAuthenticated: true, isCheckingAuth: false });\r\n        } catch (error) {\r\n            set({\r\n                isAuthenticated: false,\r\n                isCheckingAuth: false,\r\n                error: error.response?.data?.message || \"Failed to authenticate\",\r\n            });\r\n        }\r\n    },\r\n\r\n    // Get Projects\r\n    getProjects: async () => {\r\n        try {\r\n            const response = await axios.get(`${USER_API}/task/takeTask`);\r\n            set({ tasks: response.data.tasks });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n\r\n    // Post Task\r\n    postTask: async (title, description, date, level) => {\r\n        try {\r\n            const response = await axios.post(`${USER_API}/task/makeTask`, { title, description, date, level });\r\n            set({ task: response.data.task });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n\r\n    // Post Project\r\n    postProject: async (title, description, year, reference) => {\r\n        try {\r\n            const response = await axios.post(`${USER_API}/projects/sendprojects`, { title, description, year, reference });\r\n            set({ project: response.data.project });\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    },\r\n}));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}