{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\n\n// Set your API endpoints\nconst USER_API = \"http://localhost:5000/auth\";\nconst ADM_API = \"http://localhost:5000/admin\";\nexport const useAuthStore = create(set => ({\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  messages: null,\n  isCheckingAuth: true,\n  message: null,\n  // Signup method\n  signup: async (firstName, lastName, admNo, year, email, password, avatar) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${USER_API}/signup`, {\n        firstName,\n        lastName,\n        admNo,\n        year,\n        email,\n        password,\n        avatar\n      });\n      set({\n        user: response.data.user,\n        isLoading: false,\n        isAuthenticated: true\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      set({\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error signing up\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Admin Login\n  adminLogin: async (email, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${ADM_API}/adminLogin`, {\n        email,\n        password\n      });\n      set({\n        admin: response.data.admin,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      set({\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error logging in\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // // User Login\n  // login: async (admNo, password) => {\n  //     set({ isLoading: true, error: null });\n  //     try {\n  //         const response = await axios.post(`${USER_API}/login`, { admNo, password });\n  //         localStorage.setItem(\"token\", response.data.token);\n  //         set({ user: response.data.user, isAuthenticated: true, isLoading: false, error: null });\n  //     } catch (error) {\n  //         set({ error: error.response?.data?.message || \"Error logging in\", isLoading: false });\n  //         throw error;\n  //     }\n  // },\n\n  // Logout\n  logout: async () => {\n    try {\n      await axios.post(`${USER_API}/logout`, null, {\n        withCredentials: true\n      });\n      localStorage.removeItem(\"token\");\n      set({\n        user: null,\n        isAuthenticated: false,\n        isCheckingAuth: false\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      set({\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Error logging out\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Forgot Password\n  forgotPassword: async email => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${USER_API}/password`, {\n        email\n      });\n      set({\n        message: response.data.message,\n        isLoading: false\n      });\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      set({\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Error sending reset password email\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Check Auth Status\n  checkAuth: async () => {\n    set({\n      isCheckingAuth: true,\n      error: null\n    });\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`${USER_API}/check-auth`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      set({\n        user: response.data.user,\n        isAuthenticated: true,\n        isCheckingAuth: false\n      });\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      set({\n        isAuthenticated: false,\n        isCheckingAuth: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || \"Failed to authenticate\"\n      });\n    }\n  },\n  // Get Projects\n  getProjects: async () => {\n    try {\n      const response = await axios.get(`${USER_API}/task/takeTask`);\n      set({\n        tasks: response.data.tasks\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  // Post Task\n  postTask: async (title, description, date, level) => {\n    try {\n      const response = await axios.post(`${USER_API}/task/makeTask`, {\n        title,\n        description,\n        date,\n        level\n      });\n      set({\n        task: response.data.task\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  // Post Project\n  postProject: async (title, description, year, reference) => {\n    try {\n      const response = await axios.post(`${USER_API}/projects/sendprojects`, {\n        title,\n        description,\n        year,\n        reference\n      });\n      set({\n        project: response.data.project\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}));","map":{"version":3,"names":["create","axios","USER_API","ADM_API","useAuthStore","set","user","isAuthenticated","isLoading","error","messages","isCheckingAuth","message","signup","firstName","lastName","admNo","year","email","password","avatar","response","post","data","_error$response","_error$response$data","adminLogin","admin","_error$response2","_error$response2$data","logout","withCredentials","localStorage","removeItem","_error$response3","_error$response3$data","forgotPassword","_error$response4","_error$response4$data","checkAuth","token","getItem","get","headers","Authorization","_error$response5","_error$response5$data","getProjects","tasks","console","log","postTask","title","description","date","level","task","postProject","reference","project"],"sources":["C:/Users/user/Desktop/GIS/client/src/store/auth.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport axios from 'axios';\r\n\r\n// Set your API endpoints\r\nconst USER_API = \"http://localhost:5000/auth\";\r\nconst ADM_API = \"http://localhost:5000/admin\";\r\n\r\nexport const useAuthStore = create((set) => ({\r\n    user: null,\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n    error: null,\r\n    messages: null,\r\n    isCheckingAuth: true,\r\n    message: null,\r\n    // Signup method\r\n    signup: async (firstName, lastName, admNo, year, email, password, avatar) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${USER_API}/signup`, { firstName, lastName, admNo, year, email, password, avatar });\r\n            set({ user: response.data.user, isLoading: false, isAuthenticated: true });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error signing up\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Admin Login\r\n    adminLogin: async (email, password) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${ADM_API}/adminLogin`, { email, password });\r\n            set({ admin: response.data.admin, isAuthenticated: true, isLoading: false, error: null });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error logging in\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // // User Login\r\n    // login: async (admNo, password) => {\r\n    //     set({ isLoading: true, error: null });\r\n    //     try {\r\n    //         const response = await axios.post(`${USER_API}/login`, { admNo, password });\r\n    //         localStorage.setItem(\"token\", response.data.token);\r\n    //         set({ user: response.data.user, isAuthenticated: true, isLoading: false, error: null });\r\n    //     } catch (error) {\r\n    //         set({ error: error.response?.data?.message || \"Error logging in\", isLoading: false });\r\n    //         throw error;\r\n    //     }\r\n    // },\r\n\r\n    // Logout\r\n    logout: async () => {\r\n        try {\r\n            await axios.post(`${USER_API}/logout`, null, { withCredentials: true });\r\n            localStorage.removeItem(\"token\");\r\n            set({ user: null, isAuthenticated: false, isCheckingAuth: false });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error logging out\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Forgot Password\r\n    forgotPassword: async (email) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${USER_API}/password`, { email });\r\n            set({ message: response.data.message, isLoading: false });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error sending reset password email\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Check Auth Status\r\n    checkAuth: async () => {\r\n        set({ isCheckingAuth: true, error: null });\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            const response = await axios.get(`${USER_API}/check-auth`, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n                withCredentials: true\r\n            });\r\n            set({ user: response.data.user, isAuthenticated: true, isCheckingAuth: false });\r\n        } catch (error) {\r\n            set({\r\n                isAuthenticated: false,\r\n                isCheckingAuth: false,\r\n                error: error.response?.data?.message || \"Failed to authenticate\",\r\n            });\r\n        }\r\n    },\r\n\r\n    // Get Projects\r\n    getProjects: async () => {\r\n        try {\r\n            const response = await axios.get(`${USER_API}/task/takeTask`);\r\n            set({ tasks: response.data.tasks });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n\r\n    // Post Task\r\n    postTask: async (title, description, date, level) => {\r\n        try {\r\n            const response = await axios.post(`${USER_API}/task/makeTask`, { title, description, date, level });\r\n            set({ task: response.data.task });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n\r\n    // Post Project\r\n    postProject: async (title, description, year, reference) => {\r\n        try {\r\n            const response = await axios.post(`${USER_API}/projects/sendprojects`, { title, description, year, reference });\r\n            set({ project: response.data.project });\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    },\r\n}));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}