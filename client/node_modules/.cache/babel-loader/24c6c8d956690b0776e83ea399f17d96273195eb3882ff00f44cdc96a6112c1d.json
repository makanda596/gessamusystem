{"ast":null,"code":"// // src/store/useAuthStore.js\n\nimport { create } from 'zustand';\nimport axios from 'axios';\n\n// Configure API URLs using environment variables for flexibility\nconst USER_API = process.env.REACT_APP_USER_API || \"http://localhost:5000/auth\";\nconst ADM_API = process.env.REACT_APP_ADM_API || \"http://localhost:5000/admin\";\nexport const useAuthStore = create(set => ({\n  // Initial State\n  user: null,\n  admin: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  messages: null,\n  isCheckingAuth: true,\n  message: null,\n  email: \"\",\n  tasks: [],\n  // Initialize tasks as an empty array\n  task: null,\n  // Initialize single task as null\n\n  // Signup for Regular Users\n  signup: async (firstName, lastName, admNo, year, email, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${USER_API} / signup`, {\n        firstName,\n        lastName,\n        admNo,\n        year,\n        email,\n        password\n      });\n      set({\n        user: response.data.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      set({\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error signing up\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Admin Signup (Uncomment and implement if needed)\n  // adminSignup: async (/* admin signup parameters */) => {\n  //     // Implement admin signup logic here\n  // },\n\n  // Admin Login\n  adminLogin: async (email, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${ADM_API} / adminLogin`, {\n        email,\n        password\n      });\n      set({\n        admin: response.data.admin,\n        isLoading: false,\n        email: email,\n        isAuthenticated: true,\n        error: null\n      });\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      set({\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error logging in\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // User Login\n  login: async (admNo, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${USER_API} / login`, {\n        admNo,\n        password\n      });\n      localStorage.setItem(\"token\", response.data.token);\n      set({\n        user: response.data.user,\n        isAuthenticated: true,\n        error: null,\n        isLoading: false\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      set({\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Error logging in\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Logout\n  logout: async () => {\n    try {\n      await axios.post(`${USER_API} / logout`, null, {\n        withCredentials: true\n      });\n      set({\n        user: null,\n        admin: null,\n        isAuthenticated: false,\n        isCheckingAuth: false,\n        error: null\n      });\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      set({\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Error logging out\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Forgot Password\n  forgotPassword: async email => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${USER_API} / password`, {\n        email\n      });\n      set({\n        message: response.data.message,\n        isLoading: false\n      });\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      set({\n        isLoading: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || \"Error sending reset password email\"\n      });\n      throw error;\n    }\n  },\n  // Reset Password (Uncomment and implement if needed)\n  // resetPassword: async (token, password) => {\n  //     set({ isLoading: true, error: null });\n  //     try {\n  //         const response = await axios.post(${USER_API}/reset-password/${token}, { password });\n  //         set({ message: response.data.message, isLoading: false });\n  //     } catch (error) {\n  //         set({\n  //             isLoading: false,\n  //             error: error.response?.data?.message || \"Error resetting password\",\n  //         });\n  //         throw error;\n  //     }\n  // },\n\n  // Verify Email (Uncomment and implement if needed)\n  // verifyEmail: async (code) => {\n  //     set({ isLoading: true, error: null });\n  //     try {\n  //         const response = await axios.post(${USER_API}/verify-email, { code });\n  //         set({ user: response.data.user, isAuthenticated: true, isLoading: false });\n  //         return response.data;\n  //     } catch (error) {\n  //         set({\n  //             error: error.response?.data?.message || \"Error verifying your email\",\n  //             isLoading: false,\n  //         });\n  //         throw error;\n  //     }\n  // },\n\n  // Check Authentication Status\n  checkAuth: async () => {\n    set({\n      isCheckingAuth: true,\n      error: null\n    });\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`${USER_API} / check - auth`, {\n        headers: {\n          // Authorization: Bearer ${ token },\n        },\n        withCredentials: true\n      });\n      set({\n        user: response.data.user,\n        isAuthenticated: true,\n        isCheckingAuth: false,\n        error: null\n      });\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      set({\n        isAuthenticated: false,\n        isCheckingAuth: false,\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || \"Failed to authenticate\",\n        user: null,\n        admin: null\n      });\n    }\n  },\n  // Get Projects/Tasks\n  getProjects: async () => {\n    try {\n      const response = await axios.get(`${USER_API} / task / takeTask`);\n      set({\n        tasks: response.data.tasks\n      });\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      set({\n        error: ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || \"Error fetching tasks\"\n      });\n      console.log(error);\n    }\n  },\n  // Post/Create a Task\n  postTask: async (title, description, date, level) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${USER_API} / task /makeTask`, {\n        title,\n        description,\n        date,\n        level\n      });\n      set({\n        task: response.data.task,\n        isLoading: false\n      });\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      set({\n        isLoading: false,\n        error: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || \"Error creating task\"\n      });\n      console.log(error);\n      throw error;\n    }\n  }\n}));","map":{"version":3,"names":["create","axios","USER_API","process","env","REACT_APP_USER_API","ADM_API","REACT_APP_ADM_API","useAuthStore","set","user","admin","isAuthenticated","isLoading","error","messages","isCheckingAuth","message","email","tasks","task","signup","firstName","lastName","admNo","year","password","response","post","data","_error$response","_error$response$data","adminLogin","_error$response2","_error$response2$data","login","localStorage","setItem","token","_error$response3","_error$response3$data","logout","withCredentials","_error$response4","_error$response4$data","forgotPassword","_error$response5","_error$response5$data","checkAuth","getItem","get","headers","_error$response6","_error$response6$data","getProjects","_error$response7","_error$response7$data","console","log","postTask","title","description","date","level","_error$response8","_error$response8$data"],"sources":["C:/Users/user/Desktop/GIS/client/src/store/auth.js"],"sourcesContent":["// // src/store/useAuthStore.js\r\n\r\nimport { create } from 'zustand';\r\nimport axios from 'axios';\r\n\r\n// Configure API URLs using environment variables for flexibility\r\nconst USER_API = process.env.REACT_APP_USER_API || \"http://localhost:5000/auth\";\r\nconst ADM_API = process.env.REACT_APP_ADM_API || \"http://localhost:5000/admin\";\r\n\r\nexport const useAuthStore = create((set) => ({\r\n    // Initial State\r\n    user: null,\r\n    admin: null,\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n    error: null,\r\n    messages: null,\r\n    isCheckingAuth: true,\r\n    message: null,\r\n    email: \"\",\r\n    tasks: [], // Initialize tasks as an empty array\r\n    task: null, // Initialize single task as null\r\n\r\n    // Signup for Regular Users\r\n    signup: async (firstName, lastName, admNo, year, email, password) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${USER_API} / signup`, {\r\n                firstName,\r\n                lastName,\r\n                admNo,\r\n                year,\r\n                email,\r\n                password,\r\n            });\r\n            set({\r\n                user: response.data.user,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                error: null,\r\n            });\r\n        } catch (error) {\r\n            set({\r\n                error: error.response?.data?.message || \"Error signing up\",\r\n                isLoading: false,\r\n            });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Admin Signup (Uncomment and implement if needed)\r\n    // adminSignup: async (/* admin signup parameters */) => {\r\n    //     // Implement admin signup logic here\r\n    // },\r\n\r\n    // Admin Login\r\n    adminLogin: async (email, password) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${ADM_API} / adminLogin`, { email, password });\r\n            set({\r\n                admin: response.data.admin,\r\n                isLoading: false,\r\n                email: email,\r\n                isAuthenticated: true,\r\n                error: null,\r\n            });\r\n        } catch (error) {\r\n            set({\r\n                error: error.response?.data?.message || \"Error logging in\",\r\n                isLoading: false,\r\n            });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // User Login\r\n    login: async (admNo, password) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${USER_API} / login`, { admNo, password });\r\n            localStorage.setItem(\"token\", response.data.token);\r\n            set({\r\n                user: response.data.user,\r\n                isAuthenticated: true,\r\n                error: null,\r\n                isLoading: false,\r\n            });\r\n        } catch (error) {\r\n            set({\r\n                error: error.response?.data?.message || \"Error logging in\",\r\n                isLoading: false,\r\n            });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Logout\r\n    logout: async () => {\r\n        try {\r\n            await axios.post(`${USER_API} / logout`, null, { withCredentials: true });\r\n            set({\r\n                user: null,\r\n                admin: null,\r\n                isAuthenticated: false,\r\n                isCheckingAuth: false,\r\n                error: null,\r\n            });\r\n        } catch (error) {\r\n            set({\r\n                error: error.response?.data?.message || \"Error logging out\",\r\n                isLoading: false,\r\n            });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Forgot Password\r\n    forgotPassword: async (email) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${USER_API} / password`, { email });\r\n            set({ message: response.data.message, isLoading: false });\r\n        } catch (error) {\r\n            set({\r\n                isLoading: false,\r\n                error: error.response?.data?.message || \"Error sending reset password email\",\r\n            });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Reset Password (Uncomment and implement if needed)\r\n    // resetPassword: async (token, password) => {\r\n    //     set({ isLoading: true, error: null });\r\n    //     try {\r\n    //         const response = await axios.post(${USER_API}/reset-password/${token}, { password });\r\n    //         set({ message: response.data.message, isLoading: false });\r\n    //     } catch (error) {\r\n    //         set({\r\n    //             isLoading: false,\r\n    //             error: error.response?.data?.message || \"Error resetting password\",\r\n    //         });\r\n    //         throw error;\r\n    //     }\r\n    // },\r\n\r\n    // Verify Email (Uncomment and implement if needed)\r\n    // verifyEmail: async (code) => {\r\n    //     set({ isLoading: true, error: null });\r\n    //     try {\r\n    //         const response = await axios.post(${USER_API}/verify-email, { code });\r\n    //         set({ user: response.data.user, isAuthenticated: true, isLoading: false });\r\n    //         return response.data;\r\n    //     } catch (error) {\r\n    //         set({\r\n    //             error: error.response?.data?.message || \"Error verifying your email\",\r\n    //             isLoading: false,\r\n    //         });\r\n    //         throw error;\r\n    //     }\r\n    // },\r\n\r\n    // Check Authentication Status\r\n    checkAuth: async () => {\r\n        set({ isCheckingAuth: true, error: null });\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            const response = await axios.get(`${USER_API} / check - auth`, {\r\n                headers: {\r\n                    // Authorization: Bearer ${ token },\r\n                },\r\n                withCredentials: true,\r\n            });\r\n            set({\r\n                user: response.data.user,\r\n                isAuthenticated: true,\r\n                isCheckingAuth: false,\r\n                error: null,\r\n            });\r\n        } catch (error) {\r\n            set({\r\n                isAuthenticated: false,\r\n                isCheckingAuth: false,\r\n                error: error.response?.data?.message || \"Failed to authenticate\",\r\n                user: null,\r\n                admin: null,\r\n            });\r\n        }\r\n    },\r\n\r\n    // Get Projects/Tasks\r\n    getProjects: async () => {\r\n        try {\r\n            const response = await axios.get(`${USER_API} / task / takeTask`);\r\n            set({ tasks: response.data.tasks });\r\n        } catch (error) {\r\n            set({\r\n                error: error.response?.data?.message || \"Error fetching tasks\",\r\n            });\r\n            console.log(error);\r\n        }\r\n    },\r\n\r\n    // Post/Create a Task\r\n    postTask: async (title, description, date, level) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${USER_API} / task /makeTask`, {\r\n                title,\r\n                description,\r\n                date,\r\n                level,\r\n            });\r\n            set({ task: response.data.task, isLoading: false });\r\n        } catch (error) {\r\n            set({\r\n                isLoading: false,\r\n                error: error.response?.data?.message || \"Error creating task\",\r\n            });\r\n            console.log(error);\r\n            throw error;\r\n        }\r\n    },\r\n}));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}