{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\n\n// Set your API endpoints\nconst BACKEND_URL = \"http://localhost:5000\";\nexport const useAuthStore = create(set => ({\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  messages: null,\n  isCheckingAuth: true,\n  message: null,\n  // Signup method\n  signup: async (firstName, lastName, email, phoneNumber, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${BACKEND_URL}/auth/signup`, {\n        firstName,\n        lastName,\n        email,\n        phoneNumber,\n        password\n      });\n      set({\n        user: response.data.user,\n        isLoading: false,\n        isAuthenticated: true\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      set({\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error signing up\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Admin Login\n  adminLogin: async (email, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post('https://gessamusystem.onrender.com/adminLogin', {\n        email,\n        password\n      });\n      set({\n        admin: response.data.admin,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      set({\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error logging in\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // User Login\n  login: async (email, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${BACKEND_URL}/auth/login`, {\n        email,\n        password\n      });\n      localStorage.setItem(\"token\", response.data.token);\n      set({\n        user: response.data.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n      console.log(\"Login Response:\", response.data);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      set({\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Error logging in\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Logout \n  logout: async () => {\n    try {\n      await axios.post(`${BACKEND_URL}/auth/logout`, null, {\n        withCredentials: true\n      });\n      localStorage.removeItem(\"token\");\n      set({\n        user: null,\n        isAuthenticated: false,\n        isCheckingAuth: false\n      });\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      set({\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Error logging out\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Forgot Password\n  forgotPassword: async email => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post(`${BACKEND_URL}/auth/password`, {\n        email\n      });\n      set({\n        message: response.data.message,\n        isLoading: false\n      });\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      set({\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || \"Error sending reset password email\",\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Check Auth Status\n  checkAuth: async () => {\n    set({\n      isCheckingAuth: true,\n      error: null\n    });\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`${BACKEND_URL}/auth/check-auth`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      set({\n        user: response.data.user,\n        isAuthenticated: true,\n        isCheckingAuth: false\n      });\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      set({\n        isAuthenticated: false,\n        isCheckingAuth: false,\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || \"Failed to authenticate\"\n      });\n    }\n  },\n  // Get Projects\n  getProjects: async () => {\n    try {\n      const response = await axios.get(`${BACKEND_URL}/auth/task/takeTask`);\n      set({\n        tasks: response.data.tasks\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  // Post Task\n  postTask: async (title, description, date, level) => {\n    try {\n      const response = await axios.post(`${BACKEND_URL}/task/makeTask`, {\n        title,\n        description,\n        date,\n        level\n      });\n      set({\n        task: response.data.task\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  // Post Project\n  postProject: async (title, description, year, reference) => {\n    try {\n      const response = await axios.post(`${import.meta.env.BACKEND_URL}/projects/sendprojects`, {\n        title,\n        description,\n        year,\n        reference\n      });\n      set({\n        project: response.data.project\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}));","map":{"version":3,"names":["create","axios","BACKEND_URL","useAuthStore","set","user","isAuthenticated","isLoading","error","messages","isCheckingAuth","message","signup","firstName","lastName","email","phoneNumber","password","response","post","data","_error$response","_error$response$data","adminLogin","admin","_error$response2","_error$response2$data","login","localStorage","setItem","token","console","log","_error$response3","_error$response3$data","logout","withCredentials","removeItem","_error$response4","_error$response4$data","forgotPassword","_error$response5","_error$response5$data","checkAuth","getItem","get","headers","Authorization","_error$response6","_error$response6$data","getProjects","tasks","postTask","title","description","date","level","task","postProject","year","reference","import","meta","env","project"],"sources":["C:/Users/user/Desktop/SYSTEMS/GIS/client/src/store/auth.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport axios from 'axios';\r\n\r\n// Set your API endpoints\r\nconst BACKEND_URL = \"http://localhost:5000\";\r\n\r\nexport const useAuthStore = create((set) => ({\r\n    user: null,\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n    error: null,\r\n    messages: null,\r\n    isCheckingAuth: true,\r\n    message: null,    \r\n    // Signup method\r\n    signup: async (firstName, lastName, email, phoneNumber, password) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${BACKEND_URL}/auth/signup`, { firstName, lastName,  email, phoneNumber, password });\r\n            set({ user: response.data.user, isLoading: false, isAuthenticated: true });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error signing up\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Admin Login\r\n    adminLogin: async (email, password) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post('https://gessamusystem.onrender.com/adminLogin', { email, password });\r\n            set({ admin: response.data.admin, isAuthenticated: true, isLoading: false, error: null });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error logging in\", isLoading: false });\r\n            throw error;\r\n        } \r\n    },\r\n\r\n    // User Login\r\n    login: async (email, password) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${BACKEND_URL}/auth/login`, { email, password });\r\n            localStorage.setItem(\"token\", response.data.token);\r\n            set({ user: response.data.user, isAuthenticated: true, isLoading: false, error: null });\r\n            console.log(\"Login Response:\", response.data);\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error logging in\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Logout \r\n    logout: async () => {\r\n        try { \r\n            await axios.post(`${BACKEND_URL}/auth/logout`, null, { withCredentials: true });\r\n            localStorage.removeItem(\"token\");\r\n            set({ user: null, isAuthenticated: false, isCheckingAuth: false });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error logging out\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Forgot Password\r\n    forgotPassword: async (email) => {\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const response = await axios.post(`${BACKEND_URL}/auth/password`, { email });\r\n            set({ message: response.data.message, isLoading: false });\r\n        } catch (error) {\r\n            set({ error: error.response?.data?.message || \"Error sending reset password email\", isLoading: false });\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Check Auth Status\r\n    checkAuth: async () => {\r\n        set({ isCheckingAuth: true, error: null });\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            const response = await axios.get(`${BACKEND_URL}/auth/check-auth`, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n                withCredentials: true\r\n            });\r\n            set({ user: response.data.user, isAuthenticated: true, isCheckingAuth: false });\r\n        } catch (error) {\r\n            set({\r\n                isAuthenticated: false,\r\n                isCheckingAuth: false,\r\n                error: error.response?.data?.message || \"Failed to authenticate\",\r\n            });\r\n        }\r\n    },\r\n\r\n    // Get Projects\r\n    getProjects: async () => {\r\n        try {\r\n            const response = await axios.get(`${BACKEND_URL}/auth/task/takeTask`);\r\n            set({ tasks: response.data.tasks });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n\r\n    // Post Task\r\n    postTask: async (title, description, date, level) => {\r\n        try {\r\n            const response = await axios.post(`${BACKEND_URL}/task/makeTask`, { title, description, date, level });\r\n            set({ task: response.data.task });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n\r\n    // Post Project\r\n    postProject: async (title, description, year, reference) => {\r\n        try {\r\n            const response = await axios.post(`${import.meta.env.BACKEND_URL}/projects/sendprojects`, { title, description, year, reference });\r\n            set({ project: response.data.project });\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    },\r\n}));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}